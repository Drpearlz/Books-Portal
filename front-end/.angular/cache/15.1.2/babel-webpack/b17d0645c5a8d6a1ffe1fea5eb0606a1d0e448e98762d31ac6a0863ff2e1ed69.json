{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar BookService = /** @class */function () {\n  function BookService(http) {\n    this.http = http;\n  }\n  BookService.prototype.getBooks = function (id) {\n    var headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    var options = {\n      headers: headers\n    };\n    return this.http.get(\"http://localhost:8000/books/getBook/\".concat(id), options);\n    /* Impement the getBooks method and the get http method,\n     don’t forget to add the url of the api end point and its parameters */\n  };\n  //   constructor(private http: HttpClient) { }\n  // getBooks(): Observable<any> {\n  // const headers = new HttpHeaders(\n  //   {'Content-Type': 'application/json','Accept': 'application/json'});\n  // const options = { headers: headers };\n  // return this.http.get('http://localhost:8000/books/getBook', options);\n  // }\n  BookService.prototype.addBook = function (form) {\n    var headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    var options = {\n      headers: headers\n    };\n    return this.http.post('http://localhost:8000/books/addBook/', form, options);\n  };\n  BookService.prototype.changeBook = function (email, id) {\n    var headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    var options = {\n      headers: headers\n    };\n    console.log(JSON.stringify(email));\n    return this.http.patch(\"http://localhost:8000/books/changeBook/\".concat(id), JSON.stringify({\n      email: email\n    }), options);\n  };\n  BookService.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookService;\n}();\nexport { BookService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}